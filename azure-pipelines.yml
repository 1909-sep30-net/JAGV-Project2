# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'


variables:
  buildConfiguration: 'Release'

steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloudService'
    organization: '1909-sep30-net'
    scannerMode: 'MSBuild'
    projectKey: 'Project2JAGV'
    projectName: 'Project2JAGV'
    extraProperties: |
     sonar.coverage.exclusions="**/Migrations/**,**/Entities/**,**/lib/**"
     sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
  workingDirectory: './'


- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    arguments: --configuration $(buildConfiguration) --collect "Code Coverage"

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(3)(1aea89d4-388d-4d50-938f-9c95f509c96d)'
    appType: 'webApp'
    WebAppName: 'jagv'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

